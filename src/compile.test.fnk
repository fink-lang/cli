{rmdirSync} = import `fs`

{describe, it, expect, mock_fn, mock, to_match_snapshot, to_be_called_with} = import `@fink/jest`


jest.mock:: `@fink/loxia`, fn:
  {
    generate: mock_fn:: fn:
      {
        code: `test-code`,
        map: `test-map`
      }
  }

{readdirSync, statSync} = import `fs`

{compile_all} = import `./compile`


describe:: compile_all, fn:

  it:: `compiles file to stdout`, fn:
    stdout = {write: mock_fn()}

    compile_all:: {stdout}, [`./src/compile.test.fnk`]

    expect::
      stdout.write
      to_be_called_with `test-code\n`


  it:: `compiles files to out-dir`, fn:
    stdout = {write: mock_fn()}
    rmdirSync:: `./build/test`, {recursive: true}

    compile_all:: {stdout}, [`./src`], `./build/test`

    files = readdirSync:: `./build/test`

    expect::
       files
       to_match_snapshot


  it:: `ignores files`, fn:
    stdout = {write: mock_fn()}
    rmdirSync:: `./build/test`, {recursive: true}

    compile_all:: {stdout}, [`./src`], `./build/test`, `./src/*.test.fnk`

    files = readdirSync:: `./build/test`

    expect::
       files
       to_match_snapshot
