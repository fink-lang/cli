{readdirSync, statSync} = import `fs`

{describe, it, mock_fn, mock, called_with, to_throw} = import `./testing`


mock:: `./compile`, fn: {
  compile_all: mock_fn:: fn: null
}

{compile_all} = import `./compile`
{main} = import `./index`


describe:: main, fn:

  it:: `compiles file without out-dir`, fn:
    proc = {argv: [null, null, `--src`, `./src/index.fnk`]}

    main:: proc

    compile_all called_with [proc, [`./src/index.fnk`], null, null]


  it:: `compiles dir to out-dir`, fn:
    proc = {argv: [null, null, `--src`, `./src`, `--out-dir`, `./build/test`]}

    main:: proc

    compile_all called_with [proc, [`./src`], `./build/test`, null]


  it:: `ignores files`, fn:
    proc = {argv: [null, null, `--src`, `./src`, `--ignore`, `./src/*.test.*`]}

    main:: proc

    compile_all called_with [proc, [`./src`], null, `./src/*.test.*`]


  it:: `handles errors`, fn:
    compile_all.mockImplementation(fn: null())
    proc = {
      argv: [null, null, `--src`, `./src`, `--ignore`, `./src/*.test.*`],
      exit: mock_fn:: null
    }

    main:: proc

    proc.exit called_with [-1]


